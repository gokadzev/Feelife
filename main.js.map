{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/shared_components/additional_components/album-cube/album-cube.component.ts","./src/app/shared_components/additional_components/album-cube/album-cube.component.html","./src/app/shared_components/additional_components/artist/artist.component.ts","./src/app/shared_components/additional_components/artist/artist.component.html","./src/app/shared_components/additional_components/song-cube/song-cube.component.ts","./src/app/shared_components/additional_components/song-cube/song-cube.component.html","./src/app/shared_components/additional_components/song/song.component.ts","./src/app/shared_components/additional_components/song/song.component.html","./src/app/shared_components/album-page/album-page.component.ts","./src/app/shared_components/album-page/album-page.component.html","./src/app/shared_components/albums/albums.component.ts","./src/app/shared_components/albums/albums.component.html","./src/app/shared_components/artist-page/artist-page.component.ts","./src/app/shared_components/artist-page/artist-page.component.html","./src/app/shared_components/artists/artists.component.ts","./src/app/shared_components/artists/artists.component.html","./src/app/shared_components/discover/discover.component.ts","./src/app/shared_components/discover/discover.component.html","./src/app/shared_components/global50/global50.component.ts","./src/app/shared_components/global50/global50.component.html","./src/app/shared_components/home/home.component.ts","./src/app/shared_components/home/home.component.html","./src/app/shared_components/profile/profile.component.ts","./src/app/shared_components/profile/profile.component.html","./src/app/shared_components/recent/recent.component.ts","./src/app/shared_components/recent/recent.component.html","./src/app/shared_components/search/search.component.ts","./src/app/shared_components/search/search.component.html","./src/app/shared_components/settings/languages/language/language.component.ts","./src/app/shared_components/settings/languages/language/language.component.html","./src/app/shared_components/settings/languages/languages.component.ts","./src/app/shared_components/settings/languages/languages.component.html","./src/app/shared_components/settings/settings.component.ts","./src/app/shared_components/settings/settings.component.html","./src/app/shared_components/suggestions/suggestions.component.ts","./src/app/shared_components/suggestions/suggestions.component.html","./src/app/shared_models/album.model.ts","./src/app/shared_models/language.model.ts","./src/app/shared_models/singer.model.ts","./src/app/shared_services/dark-mode.service.ts","./src/app/shared_services/data-manager.service.ts","./src/app/shared_services/status-exchanger.service.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AlbumPageComponent } from './shared_components/album-page/album-page.component';\nimport { AlbumsComponent } from './shared_components/albums/albums.component';\nimport { ArtistPageComponent } from './shared_components/artist-page/artist-page.component';\nimport { ArtistsComponent } from './shared_components/artists/artists.component';\nimport { DiscoverComponent } from './shared_components/discover/discover.component';\nimport { Global50Component } from './shared_components/global50/global50.component';\nimport { HomeComponent } from './shared_components/home/home.component';\nimport { ProfileComponent } from './shared_components/profile/profile.component';\nimport { RecentComponent } from './shared_components/recent/recent.component';\nimport { SearchComponent } from './shared_components/search/search.component';\nimport { LanguagesComponent } from './shared_components/settings/languages/languages.component';\nimport { SettingsComponent } from './shared_components/settings/settings.component';\nimport { SuggestionsComponent } from './shared_components/suggestions/suggestions.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    pathMatch: 'full',\n    redirectTo: 'home',\n    data: { state: 'home' },\n  },\n  {\n    path: 'home',\n    component: HomeComponent,\n    data: { state: 'home' },\n  },\n  {\n    path: 'logout',\n    component: HomeComponent,\n    data: { state: 'home' },\n  },\n  {\n    path: 'search',\n    component: SearchComponent,\n    data: { state: 'search' },\n  },\n  {\n    path: 'discover',\n    component: DiscoverComponent,\n    data: { state: 'discover' },\n  },\n  {\n    path: 'top50',\n    component: Global50Component,\n    data: { state: 'top50' },\n  },\n  {\n    path: 'suggestions',\n    component: SuggestionsComponent,\n    data: { state: 'suggestions' },\n  },\n  {\n    path: 'recent',\n    component: RecentComponent,\n    data: { state: 'recent' },\n  },\n  {\n    path: 'albums',\n    component: AlbumsComponent,\n    data: { state: 'albums' },\n  },\n  {\n    path: 'album/:album',\n    component: AlbumPageComponent,\n    data: { state: 'album' },\n  },\n  {\n    path: 'artists',\n    component: ArtistsComponent,\n    data: { state: 'artists' },\n  },\n  {\n    path: 'artist-info',\n    component: ArtistPageComponent,\n    data: { state: 'artistInfo' },\n  },\n  {\n    path: 'artist-info/:id',\n    component: ArtistPageComponent,\n    data: { state: 'artistInfoId' },\n  },\n  {\n    path: 'settings',\n    component: SettingsComponent,\n    data: { state: 'settings' },\n  },\n  {\n    path: 'languages',\n    component: LanguagesComponent,\n    data: { state: 'languages' },\n  },\n  {\n    path: 'profile',\n    component: ProfileComponent,\n    data: { state: 'profile' },\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  HostListener,\n  OnInit,\n  ViewChild,\n} from '@angular/core';\nimport {\n  Router,\n  RouterLink,\n  RouterLinkActive,\n  RouterOutlet,\n} from '@angular/router';\nimport { TranslateService, TranslateModule } from '@ngx-translate/core';\nimport { BehaviorSubject, Subject, Subscription } from 'rxjs';\nimport { Playlist } from './shared_models/playlist.model';\nimport { PLsinger } from './shared_models/singer.model';\nimport { PLsong } from './shared_models/song.model';\nimport { DarkModeService } from './shared_services/dark-mode.service';\nimport { DataManagerService } from './shared_services/data-manager.service';\nimport { StatusExchangerService } from './shared_services/status-exchanger.service';\nimport { FormsModule } from '@angular/forms';\nimport { NgFor, NgIf, NgStyle, AsyncPipe, SlicePipe } from '@angular/common';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  standalone: true,\n  providers: [DataManagerService],\n  imports: [\n    RouterLink,\n    RouterLinkActive,\n    RouterOutlet,\n    NgFor,\n    NgIf,\n    NgStyle,\n    FormsModule,\n    AsyncPipe,\n    SlicePipe,\n    TranslateModule,\n  ],\n})\nexport class AppComponent implements OnInit, AfterViewInit {\n  title = 'Feelife';\n  mobileNavStatus = '';\n\n  currentProgress$ = new BehaviorSubject<number>(0);\n  currentTime$ = new Subject<string>();\n\n  @ViewChild('player', { static: true }) player!: ElementRef<HTMLAudioElement>;\n  @ViewChild('volumeSlider', { static: true })\n  volumeSlider!: ElementRef<HTMLInputElement>;\n\n  songs: PLsong[] = [];\n  singers: PLsinger[] = [];\n  playlists: Playlist[] = [];\n  favoritedSongs: PLsong[] = [];\n  innerWidth: number = window.innerWidth;\n\n  audio = new Audio();\n  isPlaying = false;\n  activeSong?: PLsong;\n  durationTime?: string;\n  songCoverImage: string = '';\n\n  paramsSubscription: Subscription | null = null;\n\n  language: string = localStorage.getItem('language') ?? 'en';\n\n  repeatStatus = false;\n  shuffleStatus = false;\n  vol = 100;\n\n  constructor(\n    private statusExchanger: StatusExchangerService,\n    private dataManager: DataManagerService,\n    public router: Router,\n    private translate: TranslateService,\n    private darkMode: DarkModeService\n  ) {\n    this.translate.setDefaultLang(this.language);\n    this.translate.use(this.language);\n  }\n\n  ngOnInit() {\n    this.loadData();\n    this.initSubscriptions();\n  }\n\n  ngAfterViewInit() {\n    this.changeVolume();\n  }\n\n  @HostListener('window:resize')\n  onResize() {\n    this.innerWidth = window.innerWidth;\n  }\n\n  private loadData() {\n    try {\n      this.dataManager.getSongs().then((songs) => {\n        this.songs = songs;\n        if (this.songs.length > 0) {\n          this.chooseSong(this.songs[0]);\n        }\n      });\n\n      this.dataManager.getSingers().then((singers) => {\n        this.singers = singers;\n      });\n      this.dataManager.getPlaylists().then((playlists) => {\n        this.playlists = playlists;\n      });\n    } catch (error) {\n      console.error('Error fetching data', error);\n    }\n  }\n\n  private initSubscriptions() {\n    this.statusExchanger.activeLanguageCode.subscribe((code: string) => {\n      this.setLanguage(code);\n    });\n\n    this.statusExchanger.activeSongId.subscribe((songId: number) => {\n      this.playSongById(songId);\n    });\n  }\n\n  private setLanguage(code: string) {\n    this.language = code;\n    localStorage.setItem('language', code);\n    this.translate.setDefaultLang(code);\n    this.translate.use(code);\n  }\n\n  private playSongById(songId: number) {\n    const song = this.songs.find((s) => s.id === songId) || this.songs[0];\n    this.chooseSong(song);\n    this.onPlay();\n  }\n\n  onPlay() {\n    if (this.activeSong == undefined) {\n      this.chooseSong(this.songs[0]);\n    }\n\n    this.audio.play();\n    this.isPlaying = true;\n    this.durationTime = undefined;\n\n    this.audio.ontimeupdate = () => this.onTimeUpdate();\n    this.audio.onended = () => this.playNextSong();\n  }\n\n  chooseSong(song: PLsong) {\n    this.audio.pause();\n    this.audio.src = song.path;\n    this.activeSong = song;\n    this.dataManager.addRecentSong(song);\n  }\n\n  private onTimeUpdate() {\n    if (!this.durationTime) {\n      this.setSongDuration();\n    }\n\n    const currentTime = this.audio.currentTime;\n    const duration = this.audio.duration;\n\n    const currentMinutes = Math.floor(currentTime / 60);\n    const currentSeconds = ('0' + Math.floor(currentTime % 60)).slice(-2);\n    this.currentTime$.next(`${currentMinutes}:${currentSeconds}`);\n\n    const percentage = Math.round((currentTime / duration) * 100);\n    this.currentProgress$.next(percentage);\n  }\n\n  private setSongDuration() {\n    const duration = this.audio.duration;\n    const minutes = Math.floor(duration / 60);\n    const seconds = ('0' + Math.floor(duration % 60)).slice(-2);\n    this.durationTime = `${minutes}:${seconds}`;\n  }\n\n  playNextSong() {\n    const currentIndex = this.songs.findIndex(\n      (s) => s.id === this.activeSong?.id\n    );\n    const nextIndex = (currentIndex + 1) % this.songs.length;\n    this.chooseSong(this.songs[nextIndex]);\n    this.onPlay();\n  }\n\n  playPreviousSong() {\n    const currentIndex = this.songs.findIndex(\n      (s) => s.id === this.activeSong?.id\n    );\n    const prevIndex =\n      (currentIndex - 1 + this.songs.length) % this.songs.length;\n    this.chooseSong(this.songs[prevIndex]);\n    this.onPlay();\n  }\n\n  onPause() {\n    this.audio.pause();\n    this.isPlaying = false;\n    this.currentProgress$.next(0);\n    this.currentTime$.next('0:00');\n    this.durationTime = undefined;\n  }\n\n  changeVolume() {\n    this.audio.volume = this.vol / 100;\n    this.volumeSlider.nativeElement.style.background = `linear-gradient(to right, #82CFD0 0%, #82CFD0 ${this.vol}%, #fff ${this.vol}%, #fff 100%)`;\n  }\n\n  toggleRepeat() {\n    this.repeatStatus = !this.repeatStatus;\n  }\n\n  toggleShuffle() {\n    this.shuffleStatus = !this.shuffleStatus;\n    this.statusExchanger.shuffleStatus.emit(this.shuffleStatus);\n  }\n}\n","<section class=\"mobileNavbar {{ mobileNavStatus }}\">\n  <div class=\"tabs\">\n    <div class=\"tab\">\n      <a [routerLink]=\"['home']\"><img src=\"assets/icons/home.svg\" alt=\"\" /> </a>\n    </div>\n    <div class=\"tab\">\n      <a [routerLink]=\"['search']\"\n        ><img src=\"assets/icons/search.svg\" alt=\"\" />\n      </a>\n    </div>\n    <div class=\"tab\">\n      <a [routerLink]=\"['discover']\"\n        ><img src=\"assets/icons/discover.svg\" alt=\"\" />\n      </a>\n    </div>\n    <div class=\"tab\">\n      <a [routerLink]=\"['albums']\"\n        ><img src=\"assets/icons/album.svg\" alt=\"\" />\n      </a>\n    </div>\n    <div class=\"tab\">\n      <a [routerLink]=\"['artists']\"\n        ><img src=\"assets/icons/artist.svg\" alt=\"\" />\n      </a>\n    </div>\n    <div class=\"tab\">\n      <a [routerLink]=\"['settings']\"\n        ><img src=\"assets/icons/settings.svg\" alt=\"\" />\n      </a>\n    </div>\n    <div class=\"tab\">\n      <a [routerLink]=\"['logout']\"\n        ><img src=\"assets/icons/exit.svg\" alt=\"\" />\n      </a>\n    </div>\n  </div>\n</section>\n<div class=\"components\">\n  <aside class=\"left\">\n    <div class=\"logo\">\n      <a [routerLink]=\"['home']\"\n        ><img class=\"svg\" src=\"assets/icons/logo.svg\" alt=\"\" />\n        <h3>Feelife</h3>\n      </a>\n    </div>\n    <div class=\"tabs\">\n      <h1>{{ \"MENU\" | translate }}</h1>\n      <div class=\"tab\" [routerLinkActive]=\"['is-active-tab']\">\n        <a [routerLink]=\"['home']\"\n          ><img src=\"assets/icons/home.svg\" alt=\"\" />\n          <p>{{ \"Home\" | translate }}</p>\n        </a>\n      </div>\n      <div class=\"tab\" [routerLinkActive]=\"['is-active-tab']\">\n        <a [routerLink]=\"['search']\"\n          ><img src=\"assets/icons/search.svg\" alt=\"\" />\n          <p>{{ \"Search\" | translate }}</p>\n        </a>\n      </div>\n      <div class=\"tab\" [routerLinkActive]=\"['is-active-tab']\">\n        <a [routerLink]=\"['discover']\"\n          ><img src=\"assets/icons/discover.svg\" alt=\"\" />\n          <p>{{ \"Discover\" | translate }}</p>\n        </a>\n      </div>\n      <div class=\"tab\" [routerLinkActive]=\"['is-active-tab']\">\n        <a [routerLink]=\"['albums']\"\n          ><img src=\"assets/icons/album.svg\" alt=\"\" />\n          <p>{{ \"Albums\" | translate }}</p>\n        </a>\n      </div>\n      <div class=\"tab\" [routerLinkActive]=\"['is-active-tab']\">\n        <a [routerLink]=\"['artists']\"\n          ><img src=\"assets/icons/artist.svg\" alt=\"\" />\n          <p>{{ \"Artists\" | translate }}</p>\n        </a>\n      </div>\n    </div>\n    <div class=\"tabs\">\n      <h1>{{ \"LIBRARY\" | translate }}</h1>\n      <div class=\"tab\" [routerLinkActive]=\"['is-active-tab']\">\n        <a [routerLink]=\"['recent']\"\n          ><img src=\"assets/icons/recent.svg\" alt=\"\" />\n          <p>{{ \"Recent\" | translate }}</p>\n        </a>\n      </div>\n    </div>\n    <div class=\"tabs\">\n      <h1>{{ \"GENERAL\" | translate }}</h1>\n      <div class=\"tab\" [routerLinkActive]=\"['is-active-tab']\">\n        <a [routerLink]=\"['settings']\"\n          ><img src=\"assets/icons/settings.svg\" alt=\"\" />\n          <p>{{ \"Settings\" | translate }}</p>\n        </a>\n      </div>\n      <div class=\"tab\" [routerLinkActive]=\"['is-active-tab']\">\n        <a [routerLink]=\"['logout']\"\n          ><img src=\"assets/icons/exit.svg\" alt=\"\" />\n          <p>{{ \"Log Out\" | translate }}</p>\n        </a>\n      </div>\n    </div>\n  </aside>\n  <aside class=\"center\">\n    <div style=\"margin-bottom: 10px\">\n      <router-outlet></router-outlet>\n    </div>\n  </aside>\n  <aside class=\"right\">\n    <div class=\"feature tabs\">\n      <h1>{{ \"PROFILE\" | translate }}</h1>\n      <div class=\"profile\">\n        <div class=\"tab\">\n          <a [routerLink]=\"['profile']\"\n            ><img class=\"userIcon\" src=\"assets/icons/user-circle.svg\" alt=\"\" />\n            <p>{{ \"profile\" | translate }}</p>\n          </a>\n        </div>\n      </div>\n    </div>\n    <div class=\"feature tabs\">\n      <div class=\"flex\">\n        <h1>{{ \"TOP ARTISTS\" | translate }}</h1>\n        <button class=\"moreButton\" [routerLink]=\"['/artists']\">\n          <img class=\"svg\" src=\"assets/icons/more.svg\" alt=\"\" />\n        </button>\n      </div>\n      <div class=\"mini-artists-list\">\n        <ng-container *ngFor=\"let singer of singers | slice : 0 : 9\">\n          <div class=\"singer\" [routerLink]=\"['/artist-info/' + singer.id]\">\n            <img [src]=\"singer.coverphoto\" alt=\"\" />\n            <h3>{{ singer.singer }}</h3>\n          </div>\n        </ng-container>\n      </div>\n    </div>\n  </aside>\n</div>\n\n<audio #player></audio>\n\n<div class=\"player-bar\">\n  <div class=\"player-content\">\n    <div class=\"music-info-area\" *ngIf=\"activeSong\">\n      <img\n        *ngIf=\"activeSong?.coverphoto\"\n        [src]=\"activeSong.coverphoto\"\n        alt=\"\"\n      />\n      <div class=\"music-info\">\n        <h3 *ngIf=\"activeSong?.singer\">{{ activeSong.singer }}</h3>\n        <p *ngIf=\"activeSong?.songtitle\">{{ activeSong.songtitle }}</p>\n      </div>\n    </div>\n    <div class=\"control-area\">\n      <table class=\"controller\">\n        <button class=\"additional-func svg\" (click)=\"toggleShuffle()\">\n          <img src=\"assets/icons/shuffle.svg\" alt=\"\" />\n        </button>\n        <td>\n          <button type=\"button\" class=\"svg\" (click)=\"playPreviousSong()\">\n            <img src=\"assets/icons/skip-back.svg\" alt=\"\" />\n          </button>\n        </td>\n        <td [style.display]=\"isPlaying === true ? 'table-cell' : 'none'\">\n          <button\n            type=\"button\"\n            class=\"play-button\"\n            *ngIf=\"isPlaying\"\n            (click)=\"onPause()\"\n          >\n            <img src=\"assets/icons/pauze.svg\" alt=\"\" />\n          </button>\n        </td>\n        <td [style.display]=\"isPlaying === false ? 'table-cell' : 'none'\">\n          <button\n            type=\"button\"\n            class=\"play-button\"\n            *ngIf=\"!isPlaying\"\n            (click)=\"onPlay()\"\n          >\n            <img src=\"assets/icons/play.svg\" alt=\"\" />\n          </button>\n        </td>\n\n        <td>\n          <button type=\"button\" class=\"svg\" (click)=\"playNextSong()\">\n            <img src=\"assets/icons/skip-forward.svg\" alt=\"\" />\n          </button>\n        </td>\n        <button class=\"additional-func svg\" (click)=\"toggleRepeat()\">\n          <img src=\"assets/icons/repeat.svg\" alt=\"\" />\n        </button>\n      </table>\n    </div>\n    <div\n      class=\"volume-slider\"\n      [ngStyle]=\"{ display: innerWidth < 768 ? 'none' : 'block' }\"\n    >\n      <input\n        id=\"vol-control\"\n        #volumeSlider\n        type=\"range\"\n        [(ngModel)]=\"vol\"\n        (ngModelChange)=\"changeVolume()\"\n        min=\"0\"\n        max=\"100\"\n        step=\"1\"\n      />\n    </div>\n  </div>\n</div>\n","import { HttpClient } from '@angular/common/http';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\n\nexport function HttpLoaderFactory(http: HttpClient) {\n  return new TranslateHttpLoader(http, './assets/i18n/', '.json');\n}\n","import { Component, Input } from '@angular/core';\nimport { Album } from 'src/app/shared_models/album.model';\nimport { RouterLink } from '@angular/router';\n\n@Component({\n    selector: 'app-album-cube',\n    templateUrl: './album-cube.component.html',\n    styleUrls: ['./album-cube.component.css'],\n    standalone: true,\n    imports: [RouterLink]\n})\nexport class AlbumCubeComponent {\n\n  @Input()\n  album!: Album;\n\n  constructor() { }\n\n}\n","<div class=\"album\" [routerLink]=\"['/album/' + album.album]\">\n  <div class=\"albumCube\">\n    <img class=\"image\" [src]=\"album.albumCover\" alt=\"\" />\n  </div>\n  <div class=\"albumInfo\">\n    <h3>{{ album.album }}</h3>\n  </div>\n</div>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { PLsinger } from 'src/app/shared_models/singer.model';\nimport { RouterLink } from '@angular/router';\n\n@Component({\n    selector: 'app-artist',\n    templateUrl: './artist.component.html',\n    styleUrls: ['./artist.component.css'],\n    standalone: true,\n    imports: [RouterLink]\n})\nexport class ArtistComponent {\n\n  @Input()\n  singer!: PLsinger;\n\n  constructor() { }\n\n}\n","<div class=\"singer\" [routerLink]=\"['/artist-info/' + singer.id]\">\n  <img class=\"image\" [src]=\"singer.coverphoto\" alt=\"\" />\n\n  <div class=\"singerInfo\">\n    <h3>{{ singer.singer }}</h3>\n  </div>\n</div>\n","import { Component, Input } from '@angular/core';\nimport { PLsong } from 'src/app/shared_models/song.model';\nimport { StatusExchangerService } from 'src/app/shared_services/status-exchanger.service';\n\n@Component({\n    selector: 'app-song-cube',\n    templateUrl: './song-cube.component.html',\n    styleUrls: ['./song-cube.component.css'],\n    standalone: true\n})\nexport class SongCubeComponent {\n\n  @Input()\n  song!: PLsong;\n\n  constructor(private statusExchanger:StatusExchangerService) { }\n\n  playSong(songID:number){\n    this.statusExchanger.activeSongId.emit(songID)\n  }\n\n  \n\n}\n","<div class=\"song\">\n  <div class=\"songCube\">\n    <img class=\"image\" [src]=\"song.coverphoto\" alt=\"\">\n    <button (click)=\"playSong(song.id)\" class=\"play\"><img src=\"assets/icons/play.svg\" alt=\"\"></button>\n  </div>\n  <div class=\"songInfo\">\n    <h3>{{ song.singer }}</h3>\n    <p>{{ song.songtitle }}</p>\n  </div>\n</div>","import { Component, Input } from '@angular/core';\nimport { PLsong } from 'src/app/shared_models/song.model';\nimport { StatusExchangerService } from 'src/app/shared_services/status-exchanger.service';\n\n@Component({\n    selector: 'app-song',\n    templateUrl: './song.component.html',\n    styleUrls: ['./song.component.css'],\n    standalone: true\n})\nexport class SongComponent {\n\n\n  @Input()\n  song!: PLsong;\n\n  constructor(private statusExchanger:StatusExchangerService) { }\n\n  playSong(songID:number){\n    this.statusExchanger.activeSongId.emit(songID)\n  }\n}\n","<div class=\"song\">\n    <div class=\"songDetails\">\n    <img class=\"image\" [src]=\"song.coverphoto\" alt=\"\">\n    <div class=\"songInfo\">\n    <h3 class=\"greyTitle\">{{ song.singer }}</h3>\n    <p>{{ song.songtitle }}</p>\n   </div>\n   </div>\n<div class=\"controls\">\n    <button (click)=\"playSong(song.id)\" class=\"play\"><img class=\"svg\" src=\"assets/icons/play.svg\" alt=\"\"></button>\n</div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Album } from 'src/app/shared_models/album.model';\nimport { PLsong } from 'src/app/shared_models/song.model';\nimport { DataManagerService } from 'src/app/shared_services/data-manager.service';\nimport { SongComponent } from '../additional_components/song/song.component';\nimport { NgFor } from '@angular/common';\n\n@Component({\n  selector: 'app-album-page',\n  templateUrl: './album-page.component.html',\n  styleUrls: ['./album-page.component.css'],\n  standalone: true,\n  imports: [NgFor, SongComponent],\n})\nexport class AlbumPageComponent implements OnInit {\n  songs!: PLsong[];\n\n  albumName!: string | null;\n  albumCover!: string;\n  albums!: Album[];\n  albumSongs!: PLsong[];\n\n  constructor(\n    private router: ActivatedRoute,\n    private manager: DataManagerService\n  ) {}\n\n  ngOnInit(): void {\n    this.router.paramMap.subscribe(async (params) => {\n      this.albumName = params.get('album');\n\n      try {\n        this.songs = await this.manager.getSongs();\n        this.albumSongs = this.songs.filter((s) => s.album === this.albumName);\n\n        this.albums = await this.manager.getAlbums();\n        const album = this.albums.find((s) => s.album === this.albumName);\n\n        if (album) {\n          this.albumCover = album.albumCover;\n        }\n      } catch (error) {\n        console.error('Error fetching data', error);\n      }\n    });\n  }\n}\n","<div class=\"albumInfo\">\n  <h3 class=\"greyTitle\">{{ albumName }}</h3>\n  <img class=\"albumCover\" [src]=\"albumCover\" />\n\n  <div class=\"albumsongs\">\n    <app-song *ngFor=\"let item of albumSongs\" [song]=\"item\"></app-song>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Album } from 'src/app/shared_models/album.model';\nimport { DataManagerService } from 'src/app/shared_services/data-manager.service';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { AlbumCubeComponent } from '../additional_components/album-cube/album-cube.component';\nimport { NgFor, NgStyle } from '@angular/common';\n\n@Component({\n  selector: 'app-albumbs',\n  templateUrl: './albums.component.html',\n  styleUrls: ['./albums.component.css'],\n  standalone: true,\n  imports: [NgFor, AlbumCubeComponent, NgStyle, TranslateModule],\n})\nexport class AlbumsComponent implements OnInit {\n  albums!: Album[];\n\n  constructor(private manager: DataManagerService) {}\n\n  async ngOnInit(): Promise<void> {\n    this.albums = await this.manager.getAlbums();\n  }\n}\n","<h3 class=\"greyTitle\">{{ 'Albums' | translate }}</h3>\n<div class=\"albums-list\">\n    <app-album-cube class=\"album\" *ngFor=\"let item of albums\" [album]=\"item\"  [ngStyle]=\"{ 'display': item.album !== '' ? 'block' : 'none' }\"></app-album-cube>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { PLsinger } from 'src/app/shared_models/singer.model';\nimport { PLsong } from 'src/app/shared_models/song.model';\nimport { DataManagerService } from 'src/app/shared_services/data-manager.service';\nimport { SongComponent } from '../additional_components/song/song.component';\nimport { NgIf, NgFor } from '@angular/common';\n\n@Component({\n  selector: 'app-artist-page',\n  templateUrl: './artist-page.component.html',\n  styleUrls: ['./artist-page.component.css'],\n  standalone: true,\n  imports: [NgIf, NgFor, SongComponent],\n})\nexport class ArtistPageComponent implements OnInit {\n  singerId: any;\n  singer!: PLsinger | undefined;\n  singerSongs!: PLsong[];\n  singers!: PLsinger[];\n  songs!: PLsong[];\n\n  constructor(\n    private router: ActivatedRoute,\n    private manager: DataManagerService\n  ) {}\n\n  ngOnInit(): void {\n    this.router.paramMap.subscribe(async (params) => {\n      this.singerId = params.get('id');\n\n      try {\n        this.songs = await this.manager.getSongs();\n        this.singers = await this.manager.getSingers();\n\n        if (this.singerId) {\n          const _singer = this.singers.filter((s) => s.id == this.singerId);\n          if (_singer.length > 0) {\n            this.singer = _singer[0];\n            this.singerSongs = this.songs.filter(\n              (s) => s.singer === _singer[0].singer\n            );\n          }\n        }\n      } catch (error) {\n        console.error('Error fetching data', error);\n      }\n    });\n  }\n}\n","<div class=\"singerInfo\" *ngIf=\"singerId && singer\">\n  <h3>{{ singer.singer }}</h3>\n  <img class=\"artistPhoto\" [src]=\"singer.coverphoto\" />\n\n  <div class=\"singerSongs\">\n    <app-song *ngFor=\"let item of singerSongs\" [song]=\"item\"></app-song>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { PLsinger } from 'src/app/shared_models/singer.model';\nimport { DataManagerService } from 'src/app/shared_services/data-manager.service';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { ArtistComponent } from '../additional_components/artist/artist.component';\nimport { NgFor } from '@angular/common';\n\n@Component({\n    selector: 'app-artists',\n    templateUrl: './artists.component.html',\n    styleUrls: ['./artists.component.css'],\n    standalone: true,\n    imports: [NgFor, ArtistComponent, TranslateModule]\n})\nexport class ArtistsComponent implements OnInit {\n\n  singers:PLsinger [] = [];\n\n  constructor(private manager:DataManagerService) { }\n\n  async ngOnInit(): Promise<void> {\n    this.singers = await this.manager.getSingers();\n  }\n\n}\n","<h3 class=\"greyTitle\">{{ 'Artists' | translate }}</h3>\n<div class=\"artists-list\">\n    <app-artist *ngFor=\"let item of singers\" [singer]=\"item\"></app-artist>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { PLsong } from 'src/app/shared_models/song.model';\nimport { DataManagerService } from 'src/app/shared_services/data-manager.service';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { SongComponent } from '../additional_components/song/song.component';\nimport { NgFor } from '@angular/common';\n\n@Component({\n    selector: 'app-discover',\n    templateUrl: './discover.component.html',\n    styleUrls: ['./discover.component.css'],\n    standalone: true,\n    imports: [NgFor, SongComponent, TranslateModule]\n})\nexport class DiscoverComponent implements OnInit {\n\n  shuffledArray!: PLsong[];\n\n  constructor(private manager:DataManagerService) { }\n\n  async ngOnInit(): Promise<void> {\n    this.shuffledArray = await this.manager.getShuffledSongs(25);\n  }\n\n}\n","<h3 class=\"greyTitle\">{{ 'Discover' | translate }}</h3>\n<div class=\"discover\">\n    <app-song *ngFor=\"let item of shuffledArray\" [song]=\"item\"></app-song>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { PLsong } from 'src/app/shared_models/song.model';\nimport { DataManagerService } from 'src/app/shared_services/data-manager.service';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { SongCubeComponent } from '../additional_components/song-cube/song-cube.component';\nimport { NgFor, NgIf, SlicePipe } from '@angular/common';\n\n@Component({\n    selector: 'app-global50',\n    templateUrl: './global50.component.html',\n    styleUrls: ['./global50.component.css'],\n    standalone: true,\n    imports: [NgFor, SongCubeComponent, NgIf, SlicePipe, TranslateModule]\n})\nexport class Global50Component implements OnInit {\n\n  songs!: PLsong[];\n  GlobalStart:number = 0;\n  GlobalEnd:number = 16;\n\n  constructor( private manager:DataManagerService) { }\n\n  async ngOnInit(): Promise<void> {\n    this.songs = await this.manager.getShuffledSongs(50);\n  }\n\n  goTo(where:string){\n      if(where == \"Back\"){\n        this.GlobalStart = this.GlobalStart - 16\n        this.GlobalEnd = this.GlobalEnd - 16\n      } else {\n        this.GlobalStart = this.GlobalStart + 16\n        this.GlobalEnd = this.GlobalEnd + 16\n      }\n  }\n\n\n\n}\n","<h3 class=\"title\">{{ \"Global Top 50\" | translate }}</h3>\n<div class=\"global50\">\n  <app-song-cube\n    *ngFor=\"let item of songs | slice : GlobalStart : GlobalEnd\"\n    [song]=\"item\"\n  ></app-song-cube>\n</div>\n<div class=\"navigation\">\n  <button *ngIf=\"GlobalStart > 0\" (click)=\"goTo('Back')\">\n    <img class=\"svg\" src=\"assets/icons/chevrons-left.svg\" alt=\"\" />\n  </button>\n  <button *ngIf=\"GlobalStart === 0\"></button>\n\n  <button *ngIf=\"GlobalEnd + 16 < songs.length\" (click)=\"goTo('Next')\">\n    <img class=\"svg\" src=\"assets/icons/chevrons-right.svg\" alt=\"\" />\n  </button>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { PLsong } from 'src/app/shared_models/song.model';\nimport { DataManagerService } from 'src/app/shared_services/data-manager.service';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { SongComponent } from '../additional_components/song/song.component';\nimport { SongCubeComponent } from '../additional_components/song-cube/song-cube.component';\nimport { NgFor, NgIf, SlicePipe } from '@angular/common';\nimport { RouterLink } from '@angular/router';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css'],\n  standalone: true,\n  imports: [\n    RouterLink,\n    NgFor,\n    SongCubeComponent,\n    NgIf,\n    SongComponent,\n    SlicePipe,\n    TranslateModule,\n  ],\n})\nexport class HomeComponent implements OnInit {\n  top50songs: PLsong[] = [];\n  recentSongs: PLsong[] = [];\n  recommendedSongs: PLsong[] = [];\n\n  constructor(private manager: DataManagerService) {}\n\n  async ngOnInit(): Promise<void> {\n    try {\n      this.recentSongs = await this.manager.getRecentSongs();\n      this.top50songs = await this.manager.getShuffledSongs(50);\n      this.recommendedSongs = await this.manager.getShuffledSongs(50);\n    } catch (error) {\n      console.error('Error fetching data', error);\n    }\n  }\n}\n","<div class=\"title\">\n  <h3>{{ \"Global Top 50\" | translate }}</h3>\n  <button [routerLink]=\"['/top50']\">\n    <img class=\"svg\" src=\"assets/icons/more.svg\" alt=\"\" />\n  </button>\n</div>\n<div class=\"global50\">\n  <app-song-cube\n    *ngFor=\"let item of top50songs | slice : 0 : 4\"\n    [song]=\"item\"\n  ></app-song-cube>\n</div>\n<div class=\"title\">\n  <h3>{{ \"Songs You Might Like\" | translate }}</h3>\n  <button [routerLink]=\"['/suggestions']\">\n    <img class=\"svg\" src=\"assets/icons/more.svg\" alt=\"\" />\n  </button>\n</div>\n<div class=\"suggestions\">\n  <app-song-cube\n    *ngFor=\"let item of recommendedSongs | slice : 0 : 4\"\n    [song]=\"item\"\n  ></app-song-cube>\n</div>\n\n<div class=\"title\">\n  <h3>{{ \"Recently Played\" | translate }}</h3>\n  <button [routerLink]=\"['/recent']\">\n    <img class=\"svg\" src=\"assets/icons/more.svg\" alt=\"\" />\n  </button>\n</div>\n<div class=\"recently\">\n  <div class=\"list\" *ngIf=\"recentSongs.length !== 0\">\n    <app-song\n      *ngFor=\"let item of recentSongs | slice : 0 : 10\"\n      [song]=\"item\"\n    ></app-song>\n  </div>\n  <h3 class=\"notFound\" *ngIf=\"recentSongs.length === 0\">\n    You Haven't Played Any Songs Yet.\n  </h3>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { PLsong } from 'src/app/shared_models/song.model';\nimport { DataManagerService } from 'src/app/shared_services/data-manager.service';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { SongComponent } from '../additional_components/song/song.component';\nimport { NgFor, NgIf, SlicePipe } from '@angular/common';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css'],\n  standalone: true,\n  imports: [NgFor, SongComponent, NgIf, SlicePipe, TranslateModule],\n})\nexport class ProfileComponent implements OnInit {\n  songs!: PLsong[];\n\n  navStart: number = 0;\n  navEnd: number = 10;\n\n  constructor(private manager: DataManagerService) {}\n\n  async ngOnInit(): Promise<void> {\n    this.songs = await this.manager.getSongs();\n  }\n\n  goBack() {\n    this.navStart = this.navStart - 10;\n    this.navEnd = this.navEnd - 10;\n  }\n\n  goNext() {\n    this.navStart = this.navStart + 10;\n    this.navEnd = this.navEnd + 10;\n  }\n}\n","<section class=\"profile\">\n  <div class=\"profile-info\">\n    <div class=\"profile-image\">\n      <img src=\"assets/icons/user-circle.svg\" alt=\"\" />\n    </div>\n    <div class=\"profile-details\">\n      <div class=\"detail\">\n        <h3>{{ \"Name\" | translate }} : XXXXXXXXXXXXX</h3>\n      </div>\n      <div class=\"detail\">\n        <h3>{{ \"Profile Created\" | translate }}: XX.XX.XXXX</h3>\n      </div>\n    </div>\n  </div>\n  <div class=\"added-songs\">\n    <div class=\"title\">{{ \"User Added Songs\" | translate }}</div>\n    <app-song\n      *ngFor=\"let item of songs | slice : navStart : navEnd\"\n      [song]=\"item\"\n    ></app-song>\n  </div>\n  <div class=\"navigator\">\n    <button *ngIf=\"navStart === 0\"></button>\n    <button *ngIf=\"navStart !== 0\" (click)=\"goBack()\">\n      <img src=\"assets/icons/arrow-left.svg\" alt=\"\" class=\"svg\" />\n    </button>\n    <button *ngIf=\"navStart + 10 < songs.length\" (click)=\"goNext()\">\n      <img src=\"assets/icons/arrow-right.svg\" alt=\"\" class=\"svg\" />\n    </button>\n  </div>\n</section>\n","import { Component, OnInit } from '@angular/core';\nimport { PLsong } from 'src/app/shared_models/song.model';\nimport { DataManagerService } from 'src/app/shared_services/data-manager.service';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { SongCubeComponent } from '../additional_components/song-cube/song-cube.component';\nimport { NgFor, NgIf, SlicePipe } from '@angular/common';\n\n@Component({\n  selector: 'app-recent',\n  templateUrl: './recent.component.html',\n  styleUrls: ['./recent.component.css'],\n  standalone: true,\n  imports: [NgFor, SongCubeComponent, NgIf, SlicePipe, TranslateModule],\n})\nexport class RecentComponent implements OnInit {\n  recentSongs: PLsong[] = [];\n  GlobalStart: number = 0;\n  GlobalEnd: number = 16;\n\n  constructor(private manager: DataManagerService) {}\n\n  async ngOnInit(): Promise<void> {\n    try {\n      this.recentSongs = await this.manager.getRecentSongs();\n    } catch (error) {\n      console.error('Error fetching recent songs', error);\n    }\n  }\n\n  goTo(where: string) {\n    if (where == 'Back') {\n      this.GlobalStart = this.GlobalStart - 16;\n      this.GlobalEnd = this.GlobalEnd - 16;\n    } else {\n      this.GlobalStart = this.GlobalStart + 16;\n      this.GlobalEnd = this.GlobalEnd + 16;\n    }\n  }\n}\n","<h3 class=\"title\">{{ \"Recently Played\" | translate }}</h3>\n<div class=\"recent\">\n  <app-song-cube\n    *ngFor=\"let item of recentSongs | slice : GlobalStart : GlobalEnd\"\n    [song]=\"item\"\n  ></app-song-cube>\n</div>\n<div class=\"navigation\">\n  <button *ngIf=\"GlobalStart > 0\" (click)=\"goTo('Back')\">\n    <img class=\"svg\" src=\"assets/icons/chevrons-left.svg\" alt=\"\" />\n  </button>\n  <button *ngIf=\"GlobalStart === 0\"></button>\n\n  <button *ngIf=\"GlobalEnd + 16 < recentSongs.length\" (click)=\"goTo('Next')\">\n    <img class=\"svg\" src=\"assets/icons/chevrons-right.svg\" alt=\"\" />\n  </button>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { PLsinger } from 'src/app/shared_models/singer.model';\nimport { PLsong } from 'src/app/shared_models/song.model';\nimport { DataManagerService } from 'src/app/shared_services/data-manager.service';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { SongComponent } from '../additional_components/song/song.component';\nimport { ArtistComponent } from '../additional_components/artist/artist.component';\nimport { NgIf, NgFor } from '@angular/common';\n\n@Component({\n  selector: 'app-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.css'],\n  standalone: true,\n  imports: [NgIf, NgFor, ArtistComponent, SongComponent, TranslateModule],\n})\nexport class SearchComponent implements OnInit {\n  songResults: PLsong[] | undefined = undefined;\n  singerResults: PLsinger[] | undefined = undefined;\n  songs!: PLsong[];\n  singers!: PLsinger[];\n\n  constructor(private manager: DataManagerService) {}\n\n  async ngOnInit(): Promise<void> {\n    try {\n      this.songs = await this.manager.getSongs();\n      this.singers = await this.manager.getSingers();\n    } catch (error) {\n      console.error('Error fetching songs or singers', error);\n    }\n  }\n\n  Search(event: Event) {\n    const newSong = (event.target as HTMLInputElement).value;\n    let SingersFilter = this.singers.filter(\n      (value) =>\n        value.singer.toLowerCase().slice(0, newSong.length) ===\n        newSong.toLowerCase()\n    );\n    let SongsFilter = this.songs.filter(\n      (value) =>\n        value.songtitle.toLowerCase().slice(0, newSong.length) ===\n        newSong.toLowerCase()\n    );\n    if (newSong == '') {\n      this.singerResults = undefined;\n      this.songResults = undefined;\n      SingersFilter = [];\n      SongsFilter = [];\n    } else {\n      this.singerResults = SingersFilter;\n      this.songResults = SongsFilter;\n    }\n  }\n}\n","<input\n  class=\"searchBar\"\n  placeholder=\"{{ 'Search' | translate }}\"\n  (input)=\"Search($event)\"\n/>\n\n<section class=\"results\" *ngIf=\"songResults || singerResults\">\n  <h1 class=\"greyTitle\">{{ \"SINGERS\" | translate }}</h1>\n  <div class=\"singers-list\">\n    <app-artist *ngFor=\"let item of singerResults\" [singer]=\"item\"></app-artist>\n  </div>\n  <h1 class=\"greyTitle\">{{ \"SONGS\" | translate }}</h1>\n  <app-song *ngFor=\"let item of songResults\" [song]=\"item\"></app-song>\n</section>\n","import { Component, Input } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Language } from 'src/app/shared_models/language.model';\nimport { StatusExchangerService } from 'src/app/shared_services/status-exchanger.service';\n\n@Component({\n    selector: 'app-language',\n    templateUrl: './language.component.html',\n    styleUrls: ['./language.component.css'],\n    standalone: true\n})\nexport class LanguageComponent {\n\n  @Input()\n  language!: Language;\n\n  constructor(public router:Router, public statusExchanger:StatusExchangerService) { }\n\n  changeLanguage(languageCode:string){\n    localStorage.setItem(\"language\", languageCode);\n    this.router.navigate([\"/\"])\n    this.statusExchanger.activeLanguageCode.emit(languageCode);\n  }\n\n}\n","<div class=\"language\" (click)=\"changeLanguage(language.code)\">\n    <p>{{language.name}}</p>\n</div>","import { Component } from '@angular/core';\nimport { Language } from 'src/app/shared_models/language.model';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { LanguageComponent } from './language/language.component';\nimport { NgFor } from '@angular/common';\n\n@Component({\n    selector: 'app-languages',\n    templateUrl: './languages.component.html',\n    styleUrls: ['./languages.component.css'],\n    standalone: true,\n    imports: [NgFor, LanguageComponent, TranslateModule]\n})\nexport class LanguagesComponent{\n\n  constructor() { }\n\n\n  languages:Language [] = [\n    new Language('English','en'),\n    new Language('Georgian','ka'),\n    new Language('Russian','ru'),\n    new Language('Turkey','tr'),\n    new Language('Spanish','sp'),\n  ]\n\n}\n","<div class=\"title\">\n    <h1>{{ 'Language' | translate }}</h1>\n</div>\n<app-language *ngFor=\"let item of languages\" [language]=\"item\"></app-language>","import { Component, HostListener, OnInit } from '@angular/core';\nimport { DarkModeService } from 'src/app/shared_services/dark-mode.service';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { RouterLink } from '@angular/router';\nimport { NgClass } from '@angular/common';\n@Component({\n    selector: 'app-settings',\n    templateUrl: './settings.component.html',\n    styleUrls: ['./settings.component.css'],\n    standalone: true,\n    imports: [NgClass, RouterLink, TranslateModule]\n})\nexport class SettingsComponent implements OnInit {\n\n  darkModeStatus:boolean = JSON.parse(localStorage.getItem('dark-mode')!);\n  innerWidth:any;\n\n  constructor(private darkModeService: DarkModeService) { }\n\n  ngOnInit(): void {\n    this.innerWidth = window.innerWidth;\n\n    this.darkModeService.darkMode$.subscribe((status:boolean) => {\n      this.darkModeStatus = status;\n    })\n  }\n\n  @HostListener('window:resize', ['$event'])\n  onResize() {\n    this.innerWidth = window.innerWidth;\n  }\n\n  changeNightMode(){\n    this.darkModeService.changeDarkModeStatus();\n  }\n\n}\n","<section class=\"settings\">\n  <h1 class=\"sectionTitle greyTitle\">{{ \"CUSTOMISE\" | translate }}</h1>\n  <section class=\"customise\">\n    <div class=\"customiseTab nightMode\">\n      <h3 class=\"settingTab\">{{ \"NIGHT MODE\" | translate }}</h3>\n      <button\n        [ngClass]=\"darkModeStatus === true ? 'turnedOn' : 'turnButton'\"\n        (click)=\"changeNightMode()\"\n      >\n        <img src=\"assets/icons/lightoff.svg\" alt=\"\" />\n      </button>\n    </div>\n  </section>\n  <h1 class=\"sectionTitle greyTitle\">{{ \"SETTINGS\" | translate }}</h1>\n  <div class=\"otherSettings\">\n    <h3 class=\"settingTab\" [routerLink]=\"['/languages']\">\n      {{ \"Language\" | translate }}\n    </h3>\n  </div>\n</section>\n","import { Component, OnInit } from '@angular/core';\nimport { PLsong } from 'src/app/shared_models/song.model';\nimport { DataManagerService } from 'src/app/shared_services/data-manager.service';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { SongCubeComponent } from '../additional_components/song-cube/song-cube.component';\nimport { NgFor } from '@angular/common';\n\n@Component({\n  selector: 'app-suggestions',\n  templateUrl: './suggestions.component.html',\n  styleUrls: ['./suggestions.component.css'],\n  standalone: true,\n  imports: [NgFor, SongCubeComponent, TranslateModule],\n})\nexport class SuggestionsComponent implements OnInit {\n  songs!: PLsong[];\n\n  constructor(private manager: DataManagerService) {}\n\n  async ngOnInit(): Promise<void> {\n    try {\n      this.songs = await this.manager.getShuffledSongs(16);\n    } catch (error) {\n      console.error('Error fetching shuffled songs', error);\n    }\n  }\n}\n","<div class=\"title\">\n    <h3>{{ 'Songs You Might Like' | translate }}</h3>\n</div>\n<div class=\"suggestions\">\n    <app-song-cube *ngFor=\"let item of songs\" [song]=\"item\"></app-song-cube>\n</div>","export class Album {\n    album:string;\n    albumCover:string;\n  \n  \n    constructor(album:string,albumCover:string){\n      this.album = album;\n      this.albumCover = albumCover;\n    }\n}\n  ","export class Language {\n    name:string;\n    code:string;\n  \n  \n    constructor(name:string,code:string){\n      this.name = name;\n      this.code = code;\n    }\n  }\n  ","export class PLsinger {\n    id:number;\n    singer:string;\n    coverphoto:string;\n  \n  \n    constructor(id:number,singer:string,coverphoto:string){\n      this.singer = singer;\n      this.coverphoto = coverphoto;\n      this.id = id;\n    }\n  }\n  ","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class DarkModeService {\n\n  darkMode$ = new BehaviorSubject(JSON.parse(localStorage.getItem('dark-mode')!));\n\n  constructor() { \n    if(localStorage.getItem(\"dark-mode\") == \"true\") {\n      document.body.classList.toggle('dark-mode');\n    } else if (localStorage.getItem(\"dark-mode\") == \"false\") {\n      document.body.classList.toggle('light-mode');\n    } else {\n      localStorage.setItem(\"dark-mode\",\"false\");\n      document.body.classList.toggle('light-mode');\n    }\n  }\n\n  changeDarkModeStatus() {\n    if(document.body.classList.contains('dark-mode')){\n      document.body.classList.remove('dark-mode')\n      document.body.classList.toggle('light-mode');\n      localStorage.setItem(\"dark-mode\",\"false\")\n      this.darkMode$.next(false);\n    } else {\n      document.body.classList.remove('light-mode')\n      document.body.classList.toggle('dark-mode');\n      localStorage.setItem(\"dark-mode\",\"true\")\n      this.darkMode$.next(true);\n    }\n  }\n}","import { Injectable } from '@angular/core';\nimport { Album } from '../shared_models/album.model';\nimport { PLsinger } from '../shared_models/singer.model';\nimport { PLsong } from '../shared_models/song.model';\nimport { Playlist } from '../shared_models/playlist.model';\n\nimport { HttpClient } from '@angular/common/http';\nimport { lastValueFrom } from 'rxjs/internal/lastValueFrom';\n\n@Injectable()\nexport class DataManagerService {\n  favoritedSongs: PLsong[] = [];\n  recentSongs: PLsong[] = [];\n  private readonly apiUrl =\n    'https://raw.githubusercontent.com/gokadzev/fake-apis-for-projects/main/feelife/mmpwa.json';\n  private readonly playlistsApiUrl =\n    'https://raw.githubusercontent.com/gokadzev/fake-apis-for-projects/main/feelife/mmplaylists.json';\n\n  constructor(private http: HttpClient) {}\n\n  private updateLocalStorage(key: string, data: any[]): void {\n    localStorage.setItem(key, JSON.stringify(data));\n  }\n\n  private getLocalStorage(key: string): any[] {\n    return JSON.parse(localStorage.getItem(key) || '[]');\n  }\n\n  addRecentSong(song: PLsong): void {\n    if (!this.recentSongs.some((s) => s.id === song.id)) {\n      this.recentSongs.unshift(song);\n      const recentSongsFromLocalStorage = this.getLocalStorage('recentSongs');\n      recentSongsFromLocalStorage.push(song.id);\n      this.updateLocalStorage('recentSongs', recentSongsFromLocalStorage);\n\n      if (this.recentSongs.length > 49) {\n        this.recentSongs.pop();\n      }\n    }\n  }\n\n  async getRecentSongs(): Promise<PLsong[]> {\n    const recentSongsFromLocalStorage = this.getLocalStorage('recentSongs');\n\n    if (recentSongsFromLocalStorage.length !== this.recentSongs.length) {\n      const songs = await this.getSongs();\n      const mappedSongs = recentSongsFromLocalStorage.map((id: number) =>\n        songs.find((s: PLsong) => s.id === id)\n      );\n\n      this.recentSongs = (mappedSongs || []) as PLsong[];\n    }\n    return this.recentSongs;\n  }\n\n  getSongs(): Promise<PLsong[]> {\n    return lastValueFrom(this.http.get<PLsong[]>(this.apiUrl))\n      .then((response) => response)\n      .catch((error) => {\n        console.error('Error fetching songs', error);\n        return [];\n      });\n  }\n\n  getSingers(): Promise<PLsinger[]> {\n    return this.getSongs().then((songs) => {\n      const singers: PLsinger[] = [];\n      let singer = '';\n      songs.forEach((song, index) => {\n        if (singer !== song.coverphoto) {\n          singers.push(new PLsinger(index, song.singer, song.coverphoto));\n          singer = song.coverphoto;\n        }\n      });\n      return singers;\n    });\n  }\n\n  getAlbums(): Promise<Album[]> {\n    return this.getSongs().then((songs) => {\n      const albums: Album[] = [];\n      songs.forEach((song) => {\n        const existingAlbum = albums.find((album) => album.album === song.album);\n        if (!existingAlbum) {\n          albums.push(new Album(song.album, song.albumCover));\n        }\n      });\n      return albums;\n    });\n  }\n\n  getPlaylists(): Promise<Playlist[]> {\n    return lastValueFrom(this.http.get<Playlist[]>(this.playlistsApiUrl))\n      .then((response) => response)\n      .catch((error) => {\n        console.error('Error fetching playlists', error);\n        return [];\n      });\n  }\n\n  getShuffledSongs(number: number | 'all'): Promise<PLsong[]> {\n    return this.getSongs().then((songs) => {\n      const shuffledArray: PLsong[] = [];\n      let songsList: PLsong[] = songs.slice(); // Create a copy of the songs list to shuffle.\n\n      if (number === 'all') {\n        number = songsList.length;\n      }\n\n      for (let i = 0; i < number; i++) {\n        const randIndex = Math.floor(Math.random() * songsList.length);\n        shuffledArray.push(songsList[randIndex]);\n        songsList.splice(randIndex, 1); // Remove the selected song from the list.\n      }\n\n      return shuffledArray;\n    });\n  }\n}\n\n","import { EventEmitter, Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class StatusExchangerService {\n  constructor() {}\n\n  shuffleStatus: EventEmitter<boolean> = new EventEmitter();\n  activeSongId: EventEmitter<number> = new EventEmitter();\n  activeLanguageCode: EventEmitter<string> = new EventEmitter();\n\n  actionTabChange: EventEmitter<string> = new EventEmitter();\n  playerModechange: EventEmitter<string> = new EventEmitter();\n}\n","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { HttpLoaderFactory } from './app/app.module';\nimport { importProvidersFrom } from '@angular/core';\nimport { AppComponent } from './app/app.component';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\nimport { provideAnimations } from '@angular/platform-browser/animations';\nimport { withInterceptorsFromDi, provideHttpClient, HttpClient } from '@angular/common/http';\nimport { AppRoutingModule } from './app/app-routing.module';\nimport { FormsModule } from '@angular/forms';\nimport { BrowserModule, bootstrapApplication } from '@angular/platform-browser';\nimport { LocationStrategy, HashLocationStrategy } from '@angular/common';\n\n\nbootstrapApplication(AppComponent, {\n    providers: [\n        importProvidersFrom(BrowserModule, FormsModule, AppRoutingModule, TranslateModule.forRoot({\n            loader: {\n                provide: TranslateLoader,\n                useFactory: HttpLoaderFactory,\n                deps: [HttpClient],\n            },\n        })),\n        { provide: LocationStrategy, useClass: HashLocationStrategy },\n        provideHttpClient(withInterceptorsFromDi()),\n        provideAnimations(),\n    ]\n})\n  .catch(err => console.error(err));\n"],"names":["RouterModule","AlbumPageComponent","AlbumsComponent","ArtistPageComponent","ArtistsComponent","DiscoverComponent","Global50Component","HomeComponent","ProfileComponent","RecentComponent","SearchComponent","LanguagesComponent","SettingsComponent","SuggestionsComponent","routes","path","pathMatch","redirectTo","data","state","component","AppRoutingModule","_","_2","_3","forRoot","imports","i1","exports","RouterLink","RouterLinkActive","RouterOutlet","TranslateModule","BehaviorSubject","Subject","DataManagerService","FormsModule","NgFor","NgIf","NgStyle","SlicePipe","i0","ɵɵelementContainerStart","ɵɵelementStart","ɵɵelement","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","ɵɵpureFunction1","_c14","singer_r2","id","coverphoto","ɵɵsanitizeUrl","ɵɵtextInterpolate","singer","ctx_r2","activeSong","songtitle","ɵɵtemplate","AppComponent_div_119_img_1_Template","AppComponent_div_119_h3_3_Template","AppComponent_div_119_p_4_Template","ɵɵlistener","AppComponent_button_128_Template_button_click_0_listener","ɵɵrestoreView","_r4","ɵɵnextContext","ɵɵresetView","onPause","AppComponent_button_130_Template_button_click_0_listener","_r5","onPlay","AppComponent","constructor","statusExchanger","dataManager","router","translate","darkMode","title","mobileNavStatus","currentProgress$","currentTime$","songs","singers","playlists","favoritedSongs","innerWidth","window","audio","Audio","isPlaying","songCoverImage","paramsSubscription","language","localStorage","getItem","repeatStatus","shuffleStatus","vol","setDefaultLang","use","ngOnInit","loadData","initSubscriptions","ngAfterViewInit","changeVolume","onResize","getSongs","then","length","chooseSong","getSingers","getPlaylists","error","console","activeLanguageCode","subscribe","code","setLanguage","activeSongId","songId","playSongById","setItem","song","find","s","undefined","play","durationTime","ontimeupdate","onTimeUpdate","onended","playNextSong","pause","src","addRecentSong","setSongDuration","currentTime","duration","currentMinutes","Math","floor","currentSeconds","slice","next","percentage","round","minutes","seconds","currentIndex","findIndex","nextIndex","playPreviousSong","prevIndex","volume","volumeSlider","nativeElement","style","background","toggleRepeat","toggleShuffle","emit","ɵɵdirectiveInject","StatusExchangerService","i2","i3","Router","i4","TranslateService","i5","DarkModeService","selectors","viewQuery","AppComponent_Query","rf","ctx","AppComponent_resize_HostBindingHandler","ɵɵresolveWindow","ɵɵStandaloneFeature","decls","vars","consts","template","AppComponent_Template","AppComponent_ng_container_113_Template","AppComponent_div_119_Template","AppComponent_Template_button_click_122_listener","_r1","AppComponent_Template_button_click_125_listener","AppComponent_button_128_Template","AppComponent_button_130_Template","AppComponent_Template_button_click_132_listener","AppComponent_Template_button_click_134_listener","ɵɵtwoWayListener","AppComponent_Template_input_ngModelChange_137_listener","$event","ɵɵtwoWayBindingSet","ɵɵclassMapInterpolate1","ɵɵpureFunction0","_c2","_c3","_c4","_c5","_c6","_c7","_c8","ɵɵpipeBind1","_c9","_c10","_c11","_c12","ɵɵpipeBind3","ɵɵstyleProp","_c13","ɵɵtwoWayProperty","i6","DefaultValueAccessor","RangeValueAccessor","NgControlStatus","NgModel","TranslatePipe","styles","TranslateHttpLoader","HttpLoaderFactory","http","AlbumCubeComponent","inputs","album","standalone","features","AlbumCubeComponent_Template","_c0","albumCover","ArtistComponent","ArtistComponent_Template","SongCubeComponent","playSong","songID","SongCubeComponent_Template","SongCubeComponent_Template_button_click_3_listener","SongComponent","SongComponent_Template","SongComponent_Template_button_click_9_listener","item_r1","manager","_this","paramMap","_ref","_asyncToGenerator","params","albumName","get","albumSongs","filter","albums","getAlbums","_x","apply","arguments","ActivatedRoute","AlbumPageComponent_Template","AlbumPageComponent_app_song_5_Template","AlbumsComponent_Template","AlbumsComponent_app_album_cube_4_Template","ArtistPageComponent_div_0_app_song_5_Template","ctx_r1","singerSongs","singerId","_singer","ArtistPageComponent_Template","ArtistPageComponent_div_0_Template","ArtistsComponent_Template","ArtistsComponent_app_artist_4_Template","shuffledArray","getShuffledSongs","DiscoverComponent_Template","DiscoverComponent_app_song_4_Template","Global50Component_button_7_Template_button_click_0_listener","_r2","goTo","Global50Component_button_9_Template_button_click_0_listener","GlobalStart","GlobalEnd","where","Global50Component_Template","Global50Component_app_song_cube_4_Template","Global50Component_button_7_Template","Global50Component_button_8_Template","Global50Component_button_9_Template","item_r2","item_r3","HomeComponent_div_25_app_song_1_Template","ctx_r3","recentSongs","top50songs","recommendedSongs","getRecentSongs","HomeComponent_Template","HomeComponent_app_song_cube_7_Template","HomeComponent_app_song_cube_16_Template","HomeComponent_div_25_Template","HomeComponent_h3_26_Template","_c1","ProfileComponent_button_21_Template_button_click_0_listener","goBack","ProfileComponent_button_22_Template_button_click_0_listener","goNext","navStart","navEnd","ProfileComponent_Template","ProfileComponent_app_song_17_Template","ProfileComponent_button_20_Template","ProfileComponent_button_21_Template","ProfileComponent_button_22_Template","ɵɵtextInterpolate1","RecentComponent_button_7_Template_button_click_0_listener","RecentComponent_button_9_Template_button_click_0_listener","RecentComponent_Template","RecentComponent_app_song_cube_4_Template","RecentComponent_button_7_Template","RecentComponent_button_8_Template","RecentComponent_button_9_Template","SearchComponent_section_2_app_artist_5_Template","SearchComponent_section_2_app_song_9_Template","singerResults","songResults","Search","event","newSong","target","value","SingersFilter","toLowerCase","SongsFilter","SearchComponent_Template","SearchComponent_Template_input_input_0_listener","SearchComponent_section_2_Template","ɵɵpropertyInterpolate","LanguageComponent","changeLanguage","languageCode","navigate","LanguageComponent_Template","LanguageComponent_Template_div_click_0_listener","name","Language","languages","LanguagesComponent_Template","LanguagesComponent_app_language_4_Template","NgClass","darkModeService","darkModeStatus","JSON","parse","darkMode$","status","changeNightMode","changeDarkModeStatus","hostBindings","SettingsComponent_HostBindings","SettingsComponent_resize_HostBindingHandler","SettingsComponent_Template_button_click_9_listener","SuggestionsComponent_Template","SuggestionsComponent_app_song_cube_5_Template","Album","PLsinger","document","body","classList","toggle","contains","remove","factory","ɵfac","providedIn","lastValueFrom","apiUrl","playlistsApiUrl","updateLocalStorage","key","stringify","getLocalStorage","some","unshift","recentSongsFromLocalStorage","push","pop","mappedSongs","map","response","catch","forEach","index","existingAlbum","number","songsList","i","randIndex","random","splice","ɵɵinject","HttpClient","EventEmitter","actionTabChange","playerModechange","importProvidersFrom","TranslateLoader","provideAnimations","withInterceptorsFromDi","provideHttpClient","BrowserModule","bootstrapApplication","LocationStrategy","HashLocationStrategy","providers","loader","provide","useFactory","deps","useClass","err"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}